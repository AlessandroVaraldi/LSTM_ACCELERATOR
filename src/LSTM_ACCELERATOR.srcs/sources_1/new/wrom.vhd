library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity wrom is
    generic (n: integer; p: integer; i: integer; c: integer);
    port (
        clk : in STD_LOGIC;
        addr : in UNSIGNED((i+c)-1 downto 0);
        data : out STD_LOGIC_VECTOR(2**n-1 downto 0)
    );
end wrom;

architecture Behavioral of wrom is
    --type rom_type is array (0 to 2**(i+c)-1) of STD_LOGIC_VECTOR(31 downto 0);
    type rom_type is array (0 to 127) of STD_LOGIC_VECTOR(31 downto 0);
    signal temp : std_logic_vector (31 downto 0);
    signal rom : rom_type := (
        X"BDF65B98",
        X"BE228C88",
        X"3F004745",
        X"3E044DA0",
        X"BDA2CC00",
        X"3F8B0235",
        X"3F9088D1",
        X"BF747AE8",
        X"BE8C89F8",
        X"BEE32B3C",
        X"3F45FE81",
        X"BE88A54A",
        X"3E411780",
        X"3EB154C4",
        X"BFC68508",
        X"3E5869D8",
        X"3E639138",
        X"3F26F09A",
        X"BDE27520",
        X"BD09CFD0",
        X"3D281CB0",
        X"3EF731FC",
        X"BD7005F0",
        X"3F9DE6EA",
        X"BDA3FBD8",
        X"3E53BE34",
        X"BE34FF94",
        X"3E53FE5C",
        X"3DCA8F28",
        X"3F04DF97",
        X"3EB2EA46",
        X"3EA74954",
        X"BE370B04",
        X"BE7A9984",
        X"BF3B5560",
        X"BE4D0538",
        X"3F25BF22",
        X"BEDA46DA",
        X"BF1CC334",
        X"3F055E85",
        X"BF863803",
        X"3E16AAF8",
        X"3DF44138",
        X"3EC557D8",
        X"3ED554EC",
        X"3F2A085C",
        X"3EBD26EC",
        X"3F93CFB5",
        X"BE86A9E0",
        X"BE24A150",
        X"BDA2D190",
        X"BB227000",
        X"BE9454BC",
        X"BFA1EE3E",
        X"3D43A0C0",
        X"BE55A2F4",
        X"BD3984A0",
        X"3D5B3280",
        X"BE9B3760",
        X"BEB1F81A",
        X"3ECB9B6C",
        X"3D4CE340",
        X"BF41DABB",
        X"3DACC210",
        X"3F172C8C",
        X"3D78EAB0",
        X"BE2BF308",
        X"BE231FFC",
        X"BE3B1A7C",
        X"3DC477F0",
        X"3D8FEE00",
        X"BF593463",
        X"BE2DB468",
        X"3F053042",
        X"3D0B24C0",
        X"3D324580",
        X"BEC08AB8",
        X"3F9A0747",
        X"3FC7B192",
        X"BF727D75",
        X"3F14E7BA",
        X"3F617B7E",
        X"3F55AF3A",
        X"3E579C1C",
        X"3F3F49D3",
        X"BDCDDDF0",
        X"BED0D324",
        X"BF7F12AE",
        X"3E2A993C",
        X"3F27E399",
        X"BE9F96FC",
        X"BF0B5C3E",
        X"3EB72950",
        X"3F9D4E4D",
        X"3F286ED0",
        X"BDC1FA08",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000"
    );
begin

    rom <= (
        X"BDF65B98",
        X"BE228C88",
        X"3F004745",
        X"3E044DA0",
        X"BDA2CC00",
        X"3F8B0235",
        X"3F9088D1",
        X"BF747AE8",
        X"BE8C89F8",
        X"BEE32B3C",
        X"3F45FE81",
        X"BE88A54A",
        X"3E411780",
        X"3EB154C4",
        X"BFC68508",
        X"3E5869D8",
        X"3E639138",
        X"3F26F09A",
        X"BDE27520",
        X"BD09CFD0",
        X"3D281CB0",
        X"3EF731FC",
        X"BD7005F0",
        X"3F9DE6EA",
        X"BDA3FBD8",
        X"3E53BE34",
        X"BE34FF94",
        X"3E53FE5C",
        X"3DCA8F28",
        X"3F04DF97",
        X"3EB2EA46",
        X"3EA74954",
        X"BE370B04",
        X"BE7A9984",
        X"BF3B5560",
        X"BE4D0538",
        X"3F25BF22",
        X"BEDA46DA",
        X"BF1CC334",
        X"3F055E85",
        X"BF863803",
        X"3E16AAF8",
        X"3DF44138",
        X"3EC557D8",
        X"3ED554EC",
        X"3F2A085C",
        X"3EBD26EC",
        X"3F93CFB5",
        X"BE86A9E0",
        X"BE24A150",
        X"BDA2D190",
        X"BB227000",
        X"BE9454BC",
        X"BFA1EE3E",
        X"3D43A0C0",
        X"BE55A2F4",
        X"BD3984A0",
        X"3D5B3280",
        X"BE9B3760",
        X"BEB1F81A",
        X"3ECB9B6C",
        X"3D4CE340",
        X"BF41DABB",
        X"3DACC210",
        X"3F172C8C",
        X"3D78EAB0",
        X"BE2BF308",
        X"BE231FFC",
        X"BE3B1A7C",
        X"3DC477F0",
        X"3D8FEE00",
        X"BF593463",
        X"BE2DB468",
        X"3F053042",
        X"3D0B24C0",
        X"3D324580",
        X"BEC08AB8",
        X"3F9A0747",
        X"3FC7B192",
        X"BF727D75",
        X"3F14E7BA",
        X"3F617B7E",
        X"3F55AF3A",
        X"3E579C1C",
        X"3F3F49D3",
        X"BDCDDDF0",
        X"BED0D324",
        X"BF7F12AE",
        X"3E2A993C",
        X"3F27E399",
        X"BE9F96FC",
        X"BF0B5C3E",
        X"3EB72950",
        X"3F9D4E4D",
        X"3F286ED0",
        X"BDC1FA08",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000"
    );
    
    process(clk)
    begin
        if rising_edge(clk) then
            temp <= rom(to_integer(addr));
        end if;
    end process;
    data <= temp (2**n - 1 + 24 - p downto 24 - p);
end Behavioral;
