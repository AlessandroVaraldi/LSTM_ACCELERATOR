library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity wrom is
    generic (n: integer; i: integer; c: integer);
    port (
        clk : in STD_LOGIC;
        addr : in UNSIGNED((i+c)-1 downto 0);
        data : out STD_LOGIC_VECTOR(2**n-1 downto 0)
    );
end wrom;

architecture Behavioral of wrom is
    --type rom_type is array (0 to 2**(i+c)-1) of STD_LOGIC_VECTOR(31 downto 0);
    type rom_type is array (0 to 127) of STD_LOGIC_VECTOR(31 downto 0);
    signal temp : std_logic_vector (31 downto 0);
    signal rom : rom_type := (
        X"FFE1348D",
        X"FFD75CDE",
        X"00804745",
        X"00211368",
        X"FFEBA680",
        X"0116046A",
        X"012111A2",
        X"FF0B8518",
        X"FFB9BB04",
        X"FF8E6A62",
        X"00C5FE81",
        X"FFBBAD5B",
        X"003045E0",
        X"0058AA62",
        X"FE72F5F0",
        X"00361A76",
        X"0038E44E",
        X"00A6F09A",
        X"FFE3B15C",
        X"FFF76303",
        X"000A81CB",
        X"007B98FE",
        X"FFF0FFA1",
        X"013BCDD4",
        X"FFEB8085",
        X"0034EF8D",
        X"FFD2C01B",
        X"0034FF97",
        X"001951E5",
        X"0084DF97",
        X"00597523",
        X"0053A4AA",
        X"FFD23D3F",
        X"FFC1599F",
        X"FF44AAA0",
        X"FFCCBEB2",
        X"00A5BF22",
        X"FF92DC93",
        X"FF633CCC",
        X"00855E85",
        X"FEF38FFA",
        X"0025AABE",
        X"001E8827",
        X"0062ABEC",
        X"006AAA76",
        X"00AA085C",
        X"005E9376",
        X"01279F6A",
        X"FFBCAB10",
        X"FFD6D7AC",
        X"FFEBA5CE",
        X"FFFF5D90",
        X"FFB5D5A2",
        X"FEBC2384",
        X"000C3A0C",
        X"FFCA9743",
        X"FFF467B6",
        X"000DB328",
        X"FFB26450",
        X"FFA703F3",
        X"0065CDB6",
        X"000CCE34",
        X"FF3E2545",
        X"00159842",
        X"00972C8C",
        X"000F8EAB",
        X"FFD5033E",
        X"FFD73801",
        X"FFD13961",
        X"00188EFE",
        X"0011FDC0",
        X"FF26CB9D",
        X"FFD492E6",
        X"00853042",
        X"0008B24C",
        X"000B2458",
        X"FF9FBAA4",
        X"01340E8E",
        X"018F6324",
        X"FF0D828B",
        X"0094E7BA",
        X"00E17B7E",
        X"00D5AF3A",
        X"0035E707",
        X"00BF49D3",
        X"FFE64442",
        X"FF97966E",
        X"FF00ED52",
        X"002AA64F",
        X"00A7E399",
        X"FFB03482",
        X"FF74A3C2",
        X"005B94A8",
        X"013A9C9A",
        X"00A86ED0",
        X"FFE7C0BF",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000",
        X"00000000"
    );
begin
    process(clk)
    begin
        if rising_edge(clk) then
            temp <= rom(to_integer(addr));
        end if;
    end process;
    data <= temp (31 downto 31 - (2**n) + 1);
end Behavioral;
